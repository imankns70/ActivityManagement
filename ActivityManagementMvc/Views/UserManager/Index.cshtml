
@{

    Layout = "_Layout";
}

<div class="container mt-2">
    <div class="row mt-3">
        <div class="card shadow w-100">
            <div class="card-header">
                مدیریت کاربران
            </div>
            <div class="card-body">
                <div id="UserGrid" class="k-rtl"></div>


            </div>
        </div>
    </div>
</div>

<div id="windowUserContainer"></div>
<div id="context-menu-Container"></div>
<ul id='context-menu'></ul>




@section Scripts {
    @{

        <script id="CreateUser" type="text/x-kendo-template">
            <a onclick=CreateUser() class='k-button k-grid-add'><i class="fa fa-plus fa-lg"></i><span class="mr-2">افزودن</span></a>

        </script>
        <script type="text/javascript">
            var recordUser = 0;
            var windowUser;
            $(function () {

              
                UserInitialize();
               
                $("#context-menu").kendoContextMenu({
                    target: "#UserGrid",
                    filter: "#context-menu-Container"

                });
            });

            function UserInitialize() {

                $("#UserGrid").html('');

                $("#UserGrid").kendoGrid({
                    toolbar: [{ template: kendo.template($("#CreateUser").html()) }, "excel"],
                    excel: { allPages: true },

                    columnMenu: true,
                    dataSource: {
                        type: "aspnetmvc-ajax",
                        transport: {
                            read: "/UserManager/GetUsers",
                            type: "POST",
                            //dataType: "json",
                            contentType: "application/json",
                            parameterMap: function (data, operation) { return JSON.stringify(data); }
                        },
                        schema: {
                            data: "Data",
                            total: "Total",
                            errors: "Errors",
                            model: {
                                id: "Id",
                                fields: {
                                    Id: { type: "number", editable: false, nullable: true },
                                    FirstName: { type: "string" },
                                    LastName: { type: "string" },
                                    UserName: { type: "string" },
                                    GenderName: { type: "string" },
                                    PersianRegisterDateTime: { type: "string" },
                                    IsActive: { type: "boolean" },
                                    RoleName: { type: "string" },
                                    IsLock: { type: "boolean" },
                                    LockoutEnabled: { type: "boolean" }

                                }

                            }
                        },
                        parameterMap: function (data, operation) {
                            return JSON.stringify(data);

                        },
                        pageSize: 10
                    },


                    serverFiltering: true,
                    serverPaging: true,
                    serverSorting: true,
                    pageable:
                    {
                        pageSizes: [10, 25, 50, 100],
                        refresh: true
                    },
                    sort:
                    {
                        field: "Id",
                        dir: "asc"
                    },
                    dataBinding: function () {
                        recordUser = (this.dataSource.page() - 1) * this.dataSource.pageSize();
                    },

                    selectable: "single row",
                    sortable: {
                        mode: "multiple"
                    },

                    editable: false,
                    filterable: true,
                    scrollable: true,
                    columns: [
                        {
                            title: "ردیف",
                            template: "#= ++recordUser #",
                            width: 50
                        },
                        { field: "FirstName", title: "نام", width: 80 },
                        { field: "LastName", title: "نام خانوادگی", width: 120 },
                        { field: "UserName", title: "نام کاربر", width: 80 },
                        { field: "RoleName", title: "نام نقش", width: 90 },
                        {
                            field: "IsLock", title: "قفل زمانی",
                            width: 90,
                            template: function (e) {
                                var lock;
                                if (e.IsLock) {
                                    lock = "<i class='fa fa-lock fa-lg' style='color:#ff0000; cursor:pointer'  onclick='LockUserAccountByDate(" + e.Id + ")'></i>";
                                } else {
                                    lock = "<i class='fa fa-unlock fa-lg' style='color:#0ec515; cursor:pointer'  onclick='LockUserAccountByDate(" + e.Id + ")'></i>";
                                }
                                return lock;
                            }
                        },
                        { field: "PersianRegisterDateTime", title: "تاریخ عضویت", width: 110 },
 
                        { field: "GenderName", title: "جنسیت", width: 90 },
                        {
                            field: "LockoutEnabled", title: "وضعیت",
                            width: 90,
                            template: function (e) {
                                var lock;
                                if (e.LockoutEnabled) {
                                    lock = "<i class='fa fa-lock fa-lg' style='color:#ff0000; cursor:pointer'  onclick='ChangeLockOutEnable(" + e.Id + ")'></i>";
                                } else {
                                    lock = "<i class='fa fa-unlock fa-lg' style='color:#0ec515; cursor:pointer'  onclick='ChangeLockOutEnable(" + e.Id + ")'></i>";
                                }
                                return lock;
                            }
                        },
                        {
                            field: "IsActive",
                            width: 80,
                            title: "فعال",
                            template: function (e) {
                                var fa;
                                if (e.IsActive) {
                                    fa = "<i class='fa fa-check fa-lg' style='color:#0ec515'></i>";
                                } else {
                                    fa = "<i class='fa fa-times fa-lg' style='color:#ff0000'></i>";
                                }
                                return fa;
                            }
                            //template:"<label class='switch-wrap'><input type='checkbox' #=IsActive ? checked='checked':' ' # disabled='disabled'/><div class='switch'></div></label>"


                        },
                        {
                            title: "<i class='Add' >عملیات</i>",
                            width: 90,
                            template: function (e) {

                                return "<button style='height: 28px;' class='k-button' onclick='RenderMenu(this," + e.Id + ")' title='عملیات'><i class='fa fa-cogs fa-1x' ></i>  </button>";

                            }


                        }
                    ]
                }).find("table").addClass("table table-bordered table-hover");
            }


            function RenderMenu(element, id) {

                var contextMenu = $("#context-menu").data("kendoContextMenu");
                var dataSourceMenu = [];

                dataSourceMenu.push({
                    text: "<li onClick='EditUser(" + id + ")' title='ویرایش' type='button'><i class='fa fa-edit fa-lg'></i>ویرایش</li> ",
                    encoded: false
                },
                    {
                        text: "<li onClick='DeleteUser(" + id + ")' title='حذف' type='button'><i class='fa fa-trash fa-lg'></i>حذف</li> ",
                        encoded: false
                    },
                    {
                        text: "<li onClick='DetailUser(" + id + ")' title='جزئیات' type='button'><i class='fa fa-list fa-lg'></i>جزئیات</li> ",
                        encoded: false
                    },
                    {
                        text: "<li onClick='ResetPassword(" + id + ")' title='تغییر کلمه عبور' type='button'><i class='fa fa-retweet fa-lg'></i>تغییر کلمه عبور</li> ",
                        encoded: false
                    }
                );

                var offset = $(element).offset();

                $("#context-menu").data("kendoContextMenu").setOptions({
                    dataSource: dataSourceMenu
                });

                contextMenu.open(offset.left + 80, offset.top);
                $("li").css("text-align", "right");
            }

            function LockUserAccountByDate(id) {

                $.ajax({
                    type: "Get",
                    url: '/UserManager/LockOrUnLockUserAccount/' + id,
                     success: function (data) {
                        if (data.MessageType === TypeMessage.Error) {
                            ShowMessage(data.Message, TypeMessage.Error);
                        } else {
                            eval(data.Script);
                        }
                    }
                });
            }
            function ChangeLockOutEnable(id) {

                $.ajax({
                    type: "Get",
                    url: '/UserManager/ChangeLockOutEnable/' + id,
                     success: function (data) {
                        if (data.MessageType === TypeMessage.Error) {
                            ShowMessage(data.Message, TypeMessage.Error);
                        } else {
                            eval(data.Script);
                        }
                    }
                });
            }
            
            function CreateUser() {

                $("#windowUser").remove();
                $("#windowUserContainer").append("<div id='windowUser'></div>");


                $.ajax({
                    type: "Get",
                    url: '/UserManager/RenderCreate/',
                    success: function (data) {
                        $("#windowUser").html(data);

                        windowUser = $("#windowUser").kendoWindow({
                            visible: true,
                            modal: true,
                            width: "800"
                        });
                        windowUser.data("kendoWindow").title('ایجاد').center().open();
                    },
                });
            }

            function EditUser(id) {
                $("#windowUser").remove();
                $("#windowUserContainer").append("<div id='windowUser'></div>");


                $.ajax({
                    type: "Get",
                    url: '/UserManager/RenderEdit/' + id,
                    success: function (data) {

                        $("#windowUser").html(data);

                        windowUser = $("#windowUser").kendoWindow({
                            visible: true,
                            modal: true,
                            width: "800"
                        });
                        windowUser.data("kendoWindow").title('ویرایش').center().open();
                    },
                });
            }

            function DeleteUser(id) {
                $("#windowUser").remove();
                $("#windowUserContainer").append("<div id='windowUser'></div>");
                $.ajax({
                    type: "Get",
                    url: '/UserManager/RenderDelete/' + id,
                    success: function (data) {
                        $("#windowUser").html(data);

                        windowUser = $("#windowUser").kendoWindow({
                            visible: true,
                            modal: true,
                            width: "800"
                        });
                        windowUser.data("kendoWindow").title('حذف').center().open();
                    }
                });
            }

            function DetailUser(id) {
                $("#windowUser").remove();
                $("#windowUserContainer").append("<div id='windowUser'></div>");
                $.ajax({
                    type: "Get",
                    url: '/UserManager/RenderDetail/' + id,
                    success: function (data) {

                        $("#windowUser").html(data);

                        windowUser = $("#windowUser").kendoWindow({
                            visible: true,
                            modal: true,
                            width: "800"
                        });
                        windowUser.data("kendoWindow").title('جزئیات').center().open();
                    }
                });
            }

            function ResetPassword(id) {
                $("#windowUser").remove();
                $("#windowUserContainer").append("<div id='windowUser'></div>");
                $.ajax({
                    type: "Get",
                    url: '/UserManager/RenderResetPassword/',
                    data: { userId: id },
                    success: function (data) {

                        $("#windowUser").html(data);

                        windowUser = $("#windowUser").kendoWindow({
                            visible: true,
                            modal: true,
                            width: "800"
                        });
                        windowUser.data("kendoWindow").title('تغییر کلمه عبور').center().open();
                    }
                });
            }

            function UserGridRefresh() {
                var grid = $("#UserGrid").data("kendoGrid");
                grid.dataSource.read();
                try {
                    windowUser.data('kendoWindow').close();
                } catch (e) {
                }
            }
        </script>
    }
}



