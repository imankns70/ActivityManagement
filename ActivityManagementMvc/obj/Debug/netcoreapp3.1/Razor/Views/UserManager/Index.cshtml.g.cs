#pragma checksum "D:\project\ActivityManagement\ActivityManagementMvc\Views\UserManager\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "47e1024b7be5ad0b46e2fd1338516ade84ff2675"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_UserManager_Index), @"mvc.1.0.view", @"/Views/UserManager/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"47e1024b7be5ad0b46e2fd1338516ade84ff2675", @"/Views/UserManager/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"afbf2cee9c60c9dae7298ccbd51aca4f3621666b", @"/Views/_ViewImports.cshtml")]
    public class Views_UserManager_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\project\ActivityManagement\ActivityManagementMvc\Views\UserManager\Index.cshtml"
  

    Layout = "_Layout";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""customContainer"">
    <div class=""row"">
        <div class=""card shadow w-100"">
            <div class=""card-header"">
                مدیریت کاربران
            </div>
            <div class=""card-body"">
                <div id=""UserGrid"" class=""k-rtl""></div>


            </div>
        </div>
    </div>
</div>

<div id=""windowUserContainer""></div>
<div id=""context-menu-Container""></div>
<ul id='context-menu'></ul>




");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n");
                WriteLiteral(@"        <script id=""CreateUser"" type=""text/x-kendo-template"">
            <a onclick=CreateUser() class='k-button k-grid-add'><i class=""fa fa-plus fa-lg""></i><span class=""mr-2"">افزودن</span></a>

        </script>
        <script type=""text/javascript"">
            var recordUser = 0;
            var windowUser;
            $(function () {

              
                UserInitialize();
               
                $(""#context-menu"").kendoContextMenu({
                    target: ""#UserGrid"",
                    filter: ""#context-menu-Container""

                });
            });

            function UserInitialize() {

                $(""#UserGrid"").html('');

                $(""#UserGrid"").kendoGrid({
                    toolbar: [{ template: kendo.template($(""#CreateUser"").html()) }, ""excel""],
                    excel: { allPages: true },

                    columnMenu: true,
                    dataSource: {
                        type: ""aspnetmvc-ajax"",
          ");
                WriteLiteral(@"              transport: {
                            read: ""/UserManager/GetUsers"",
                            type: ""POST"",
                            //dataType: ""json"",
                            contentType: ""application/json"",
                            parameterMap: function (data, operation) { return JSON.stringify(data); }
                        },
                        schema: {
                            data: ""Data"",
                            total: ""Total"",
                            errors: ""Errors"",
                            model: {
                                id: ""Id"",
                                fields: {
                                    Id: { type: ""number"", editable: false, nullable: true },
                                    FirstName: { type: ""string"" },
                                    LastName: { type: ""string"" },
                                    UserName: { type: ""string"" },
                                    GenderName: { type: ""stri");
                WriteLiteral(@"ng"" },
                                    PersianRegisterDateTime: { type: ""string"" },
                                    IsActive: { type: ""boolean"" },
                                    RoleName: { type: ""string"" },
                                    IsLock: { type: ""boolean"" },
                                    LockoutEnabled: { type: ""boolean"" }

                                }

                            }
                        },
                        parameterMap: function (data, operation) {
                            return JSON.stringify(data);

                        },
                        pageSize: 10
                    },


                    serverFiltering: true,
                    serverPaging: true,
                    serverSorting: true,
                    pageable:
                    {
                        pageSizes: [10, 25, 50, 100],
                        refresh: true
                    },
                    sort:
              ");
                WriteLiteral(@"      {
                        field: ""Id"",
                        dir: ""asc""
                    },
                    dataBinding: function () {
                        recordUser = (this.dataSource.page() - 1) * this.dataSource.pageSize();
                    },

                    selectable: ""single row"",
                    sortable: {
                        mode: ""multiple""
                    },

                    editable: false,
                    filterable: true,
                    scrollable: true,
                    columns: [
                        {
                            title: ""ردیف"",
                            template: ""#= ++recordUser #"",
                            width: 50
                        },
                        { field: ""FirstName"", title: ""نام"", width: 80 },
                        { field: ""LastName"", title: ""نام خانوادگی"", width: 120 },
                        { field: ""UserName"", title: ""نام کاربر"", width: 80 },
                ");
                WriteLiteral(@"        { field: ""RoleName"", title: ""نام نقش"", width: 90 },
                        {
                            field: ""IsLock"", title: ""قفل زمانی"",
                            width: 90,
                            template: function (e) {
                                var lock;
                                if (e.IsLock) {
                                    lock = ""<i class='fa fa-lock fa-lg' style='color:#ff0000; cursor:pointer'  onclick='LockUserAccountByDate("" + e.Id + "")'></i>"";
                                } else {
                                    lock = ""<i class='fa fa-unlock fa-lg' style='color:#0ec515; cursor:pointer'  onclick='LockUserAccountByDate("" + e.Id + "")'></i>"";
                                }
                                return lock;
                            }
                        },
                        { field: ""PersianRegisterDateTime"", title: ""تاریخ عضویت"", width: 110 },
 
                        { field: ""GenderName"", title: ""جنسیت"", width: ");
                WriteLiteral(@"90 },
                        {
                            field: ""LockoutEnabled"", title: ""وضعیت"",
                            width: 90,
                            template: function (e) {
                                var lock;
                                if (e.LockoutEnabled) {
                                    lock = ""<i class='fa fa-lock fa-lg' style='color:#ff0000; cursor:pointer'  onclick='ChangeLockOutEnable("" + e.Id + "")'></i>"";
                                } else {
                                    lock = ""<i class='fa fa-unlock fa-lg' style='color:#0ec515; cursor:pointer'  onclick='ChangeLockOutEnable("" + e.Id + "")'></i>"";
                                }
                                return lock;
                            }
                        },
                        {
                            field: ""IsActive"",
                            width: 80,
                            title: ""فعال"",
                            template: function (e) {
   ");
                WriteLiteral(@"                             var fa;
                                if (e.IsActive) {
                                    fa = ""<i class='fa fa-check fa-lg' style='color:#0ec515'></i>"";
                                } else {
                                    fa = ""<i class='fa fa-times fa-lg' style='color:#ff0000'></i>"";
                                }
                                return fa;
                            }
                            //template:""<label class='switch-wrap'><input type='checkbox' #=IsActive ? checked='checked':' ' # disabled='disabled'/><div class='switch'></div></label>""


                        },
                        {
                            title: ""<i class='Add' >عملیات</i>"",
                            width: 90,
                            template: function (e) {

                                return ""<button style='height: 28px;' class='k-button' onclick='RenderMenu(this,"" + e.Id + "")' title='عملیات'><i class='fa fa-cogs fa-1x' ></i>");
                WriteLiteral(@"  </button>"";

                            }


                        }
                    ]
                }).find(""table"").addClass(""table table-bordered table-hover"");
            }


            function RenderMenu(element, id) {

                var contextMenu = $(""#context-menu"").data(""kendoContextMenu"");
                var dataSourceMenu = [];

                dataSourceMenu.push({
                    text: ""<li onClick='EditUser("" + id + "")' title='ویرایش' type='button'><i class='fa fa-edit fa-lg'></i>ویرایش</li> "",
                    encoded: false
                },
                    {
                        text: ""<li onClick='DeleteUser("" + id + "")' title='حذف' type='button'><i class='fa fa-trash fa-lg'></i>حذف</li> "",
                        encoded: false
                    },
                    {
                        text: ""<li onClick='DetailUser("" + id + "")' title='جزئیات' type='button'><i class='fa fa-list fa-lg'></i>جزئیات</li> "",
                    ");
                WriteLiteral(@"    encoded: false
                    },
                    {
                        text: ""<li onClick='ResetPassword("" + id + "")' title='تغییر کلمه عبور' type='button'><i class='fa fa-retweet fa-lg'></i>تغییر کلمه عبور</li> "",
                        encoded: false
                    }
                );

                var offset = $(element).offset();

                $(""#context-menu"").data(""kendoContextMenu"").setOptions({
                    dataSource: dataSourceMenu
                });

                contextMenu.open(offset.left + 80, offset.top);
                $(""li"").css(""text-align"", ""right"");
            }

            function LockUserAccountByDate(id) {

                $.ajax({
                    type: ""Get"",
                    url: '/UserManager/LockOrUnLockUserAccount/' + id,
                     success: function (data) {
                        if (data.MessageType === TypeMessage.Error) {
                            ShowMessage(data.Message, TypeMessage.");
                WriteLiteral(@"Error);
                        } else {
                            eval(data.Script);
                        }
                    }
                });
            }
            function ChangeLockOutEnable(id) {

                $.ajax({
                    type: ""Get"",
                    url: '/UserManager/ChangeLockOutEnable/' + id,
                     success: function (data) {
                        if (data.MessageType === TypeMessage.Error) {
                            ShowMessage(data.Message, TypeMessage.Error);
                        } else {
                            eval(data.Script);
                        }
                    }
                });
            }
            
            function CreateUser() {

                $(""#windowUser"").remove();
                $(""#windowUserContainer"").append(""<div id='windowUser'></div>"");


                $.ajax({
                    type: ""Get"",
                    url: '/UserManager/RenderCreate/',
       ");
                WriteLiteral(@"             success: function (data) {
                        $(""#windowUser"").html(data);

                        windowUser = $(""#windowUser"").kendoWindow({
                            visible: true,
                            modal: true,
                            width: ""800""
                        });
                        windowUser.data(""kendoWindow"").title('ایجاد').center().open();
                    },
                });
            }

            function EditUser(id) {
                $(""#windowUser"").remove();
                $(""#windowUserContainer"").append(""<div id='windowUser'></div>"");


                $.ajax({
                    type: ""Get"",
                    url: '/UserManager/RenderEdit/' + id,
                    success: function (data) {

                        $(""#windowUser"").html(data);

                        windowUser = $(""#windowUser"").kendoWindow({
                            visible: true,
                            modal: true,
    ");
                WriteLiteral(@"                        width: ""800""
                        });
                        windowUser.data(""kendoWindow"").title('ویرایش').center().open();
                    },
                });
            }

            function DeleteUser(id) {
                $(""#windowUser"").remove();
                $(""#windowUserContainer"").append(""<div id='windowUser'></div>"");
                $.ajax({
                    type: ""Get"",
                    url: '/UserManager/RenderDelete/' + id,
                    success: function (data) {
                        $(""#windowUser"").html(data);

                        windowUser = $(""#windowUser"").kendoWindow({
                            visible: true,
                            modal: true,
                            width: ""800""
                        });
                        windowUser.data(""kendoWindow"").title('حذف').center().open();
                    }
                });
            }

            function DetailUser(id) {
    ");
                WriteLiteral(@"            $(""#windowUser"").remove();
                $(""#windowUserContainer"").append(""<div id='windowUser'></div>"");
                $.ajax({
                    type: ""Get"",
                    url: '/UserManager/RenderDetail/' + id,
                    success: function (data) {

                        $(""#windowUser"").html(data);

                        windowUser = $(""#windowUser"").kendoWindow({
                            visible: true,
                            modal: true,
                            width: ""800""
                        });
                        windowUser.data(""kendoWindow"").title('جزئیات').center().open();
                    }
                });
            }

            function ResetPassword(id) {
                $(""#windowUser"").remove();
                $(""#windowUserContainer"").append(""<div id='windowUser'></div>"");
                $.ajax({
                    type: ""Get"",
                    url: '/UserManager/RenderResetPassword/',
        ");
                WriteLiteral(@"            data: { userId: id },
                    success: function (data) {

                        $(""#windowUser"").html(data);

                        windowUser = $(""#windowUser"").kendoWindow({
                            visible: true,
                            modal: true,
                            width: ""800""
                        });
                        windowUser.data(""kendoWindow"").title('تغییر کلمه عبور').center().open();
                    }
                });
            }

            function UserGridRefresh() {
                var grid = $(""#UserGrid"").data(""kendoGrid"");
                grid.dataSource.read();
                try {
                    windowUser.data('kendoWindow').close();
                } catch (e) {
                }
            }
        </script>
");
            }
            );
            WriteLiteral("\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
